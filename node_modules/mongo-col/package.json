{
  "name": "mongo-col",
  "description": "mongoDB collection wrapper",
  "version": "0.1.17",
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "contributors": [
    {
      "name": "Raynos",
      "email": "raynos2@gmail.com",
      "url": "http://raynos.org"
    }
  ],
  "dependencies": {
    "mongodb": "0.9.9-7",
    "pd": "0.6.3"
  },
  "scripts": {
    "test": "make test"
  },
  "devDependencies": {
    "mocha": "0.14.1",
    "node-uuid": "1.3.3",
    "mongoose": "2.5.10",
    "mongoskin": "0.3.3"
  },
  "keywords": [
    "mongo",
    "db",
    "database",
    "collection",
    "orm"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/mongo-col.git"
  },
  "main": "index.js",
  "engines": {
    "node": ">=0.4"
  },
  "readme": "# mongo-col [![Build Status][1]][2]\n\nmongoDB collection wrapper\n\n## Status: production ready\n\n## Example\n\n### With mongo-db native\n\n    var Db = require('mongodb').Db,\n        Server = require('mongodb').Server\n    \n    var db = new Db('integration_tests', \n        new Server(\"127.0.0.1\", 27017, {\n           auto_reconnect: false, \n           poolSize: 4\n        }))\n    \n    db.open(function(err, db) {\n        db.collection(\"CollectionName\", function(err, collection) {\n            collection.insert({hello:'world_no_safe'}, function () {\n                collection.findOne({hello:'world_no_safe'}, function(err, item) {\n                    assert.equal(null, err)\n                    assert.equal('world_no_safe', item.hello)\n                    db.close()\n                })\n            })\n        })\n    })\n    \n### With mongo-col\n\n    var collection = require(\"mongo-col\"),\n        CollectionName = collection(\"CollectionName\", \"integration_tests\")\n    \n    CollectionName.insert({ hello: \"world_no_safe\"}, function () {\n        CollectionName.findOne({ hello: \"world_no_safe\"}, function (err, item) {\n            assert.equal(null, err)\n            assert.equal('world_no_safe', item.hello)\n            CollectionName.collection.db.close()\n        })\n    })\n\n## Motivation\n\nSetting up a mongodb database connection requires too much callback soup, remove it.\n\n## Documentation\n\n### <a name=\"collection\" href=\"#collection\">collection(collectionName[, databaseName])</a>\n\n`collection` takes a collection name and returns a collection object. This collection object has all the mongodb collection methods and sets up a database connection internally\n\nSee the [MongoDB collection API][3]\n\n    var collection = require(\"mongo-col\"),\n        Users = collection(\"Users\", \"optionalDatabaseName\")\n\n    Users.insert({\n        name: \"foo\",\n        password: \"bar\"\n    })\n\nYou can optionally pass in a databaseName as a string or an instance of a mongodb database object.\n\nThere is also an optional async API\n\n    require(\"mongo-col\")(\"Users\", function (collection) {\n        ...  \n    })\n\n## <a name=\"benchmarks\" href=\"#benchmarks\">Benchmarks</a>\n\n    $ make bench\n\n    global native benchmark took  9332 53\n    mongoose benchmark took  22710 121\n    collection benchmark took  9851 56\n    mongoskin benchmark took  10817 59\n\n\n## Installation\n\n`npm install mongo-col`\n\n## Tests\n\n`make test`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n  [1]: https://secure.travis-ci.org/Raynos/mongo-col.png\n  [2]: http://travis-ci.org/Raynos/mongo-col\n  [3]: http://christkv.github.com/node-mongodb-native/api-generated/collection.html",
  "_id": "mongo-col@0.1.17",
  "_from": "mongo-col"
}
